#!/bin/sh
#
# Check how strace -e signal=set works.
#
# Copyright (c) 2016 Dmitry V. Levin <ldv@strace.io>
# Copyright (c) 2016-2020 The strace developers.
# All rights reserved.
#
# SPDX-License-Identifier: GPL-2.0-or-later

. "${srcdir=.}/init.sh"

test_one_sig()
{
	local sigs
	sigs="$1"; shift

	run_prog "../$NAME" "$@" > /dev/null

	run_strace -e trace=none -e signal="$sigs" "../$NAME" "$@" > "$EXP"
	match_diff "$LOG" "$EXP"

	run_strace --trace=none --signal="$sigs" "../$NAME" "$@" > "$EXP"
	match_diff "$LOG" "$EXP"
}

test_sigs_ex()
{
	local first second sigs
	first_id="$1"; shift
	first="$1"; shift
	second_id="$1"; shift
	second="$1"; shift

	for sigs; do
		test_one_sig "$sigs" "$first_id" "$first" "$second_id" "$second"
	done
}

test_sigs()
{
	local first
	first="$1"; shift

	test_sigs_ex 2 "$first" 15 "$@"
}

test_sigs '' '' \
	none '!all' \
	CHLD SIGCHLD ALRM SIGALRM \
	chld sigchld alrm sigalrm \
	CHLD,SIGALRM ALRM,SIGCHLD \
	chld,sigalrm alrm,sigchld \
	9 9,4 9,4,11 \
	4,CHLD,11,ALRM,9 \
	'!2,15' '!INT,TERM' '!SIGINT,TERM' '!INT,SIGTERM' '!SIGTERM,SIGINT' \
	'!2,INT,TERM' '!2,SIGTERM' '!SIGINT,15' '!INT,SIGTERM,15' \
	'!2,4,15' '!15,9,2,11,4'

test_sigs SIGINT '' \
	2 INT SIGINT \
	CHLD,SIGINT SIGINT,SIGALRM \
	chld,sigint sigint,sigalrm \
	ALRM,2,SIGCHLD \
	'!15' '!TERM' '!SIGTERM' \
	'!15,TERM' '!SIGTERM,15,TERM' \
	'!SIGALRM,TERM' '!CHLD,SIGTERM' \
	'!ALRM,15' '!SIGCHLD,ALRM,SIGTERM,KILL' \
	'!4,15' '!15,9,11,4'

test_sigs '' SIGTERM \
	15 TERM SIGTERM \
	CHLD,SIGTERM SIGTERM,SIGALRM \
	chld,sigterm sigterm,sigalrm \
	ALRM,15,SIGCHLD \
	'!2' '!INT' '!SIGINT' \
	'!2,INT' '!SIGINT,2,INT' \
	'!SIGALRM,INT' '!CHLD,SIGINT' \
	'!ALRM,2' '!SIGCHLD,ALRM,SIGINT,KILL' \
	'!4,2' '!2,9,11,4'

test_sigs SIGINT SIGTERM \
	all '!none' \
	INT,TERM SIGINT,TERM SIGTERM,INT SIGINT,SIGTERM \
	int,term sigint,term sigterm,int sigint,sigterm \
	2,15 2,TERM SIGTERM,2 TERM,15,SIGINT,2 \
	'!CHLD' '!SIGCHLD' '!ALRM' '!SIGALRM' \
	'!CHLD,SIGALRM' '!ALRM,SIGCHLD' \
	'!9' '!9,4' '!9,4,11' '!4,CHLD,11,ALRM,9'

case "$STRACE_ARCH" in
alpha)
	test_sigs '' '' \
		none '!all' \
		POLL UNUSED SIGPOLL SIGUNUSED \
		poll unused sigpoll sigunused \
		POLL,UNUSED SIGPOLL,UNUSED POLL,SIGUNUSED \
		unused,poll unused,sigpoll sigunused,poll
		PWR IOT SIGPWR SIGIOT \
		pwr iot sigpwr sigiot \
		PWR,IOT PWR,SIGIOT SIGPWR,IOT \
		iot,pwr sigiot,pwr iot,siginfo
	;;

*)
	test_sigs_ex 29 '' 31 SIGSYS \
		UNUSED SIGUNUSED unused sigunused \
		'!POLL' '!SIGPOLL' '!POLL,IO' \
		'!poll' '!chld,sigpoll' '!sigalrm,poll'
	test_sigs_ex 29 SIGIO 31 '' \
		POLL SIGPOLL poll sigpoll \
		'!UNUSED' '!SIGUNUSED' '!UNUSED,ALRM' \
		'!unused' '!unused,sigchld' '!sigunused,term'
	test_sigs_ex 29 SIGIO 31 SIGSYS \
		POLL,UNUSED SIGPOLL,UNUSED POLL,SIGUNUSED \
		unused,poll unused,sigpoll sigunused,poll

	test_sigs_ex 30 '' 6 SIGABRT \
		IOT SIGIOT iot sigiot \
		'!INFO' '!SIGINFO' '!SIGINFO,POLL' \
		'!info' '!sigstop,info' '!siginfo,pipe'
	test_sigs_ex 30 SIGPWR 6 '' \
		INFO SIGINFO info siginfo \
		'!IOT' '!SIGIOT' '!SIGFPE,IOT' \
		'!iot' '!sigiot,hup' '!iot,sigurg'
	test_sigs_ex 30 SIGPWR 6 SIGABRT \
		INFO,IOT SIGINFO,SIGIOT \
		info,iot siginfo,sigiot
	;;
esac


fail_with()
{
	dump_log_and_fail_with \
		"strace -e signal=$* failed to handle an argument error properly"
}

for arg in ' ' invalid_signal_name SIG -1 256 1-1 \
	   1,2,4,8,16,32,64,128,256,512,1024 9,chdir; do
	$STRACE -e signal="$arg" true 2> "$LOG" &&
		fail_with "$arg"
	LC_ALL=C grep -F 'invalid signal' < "$LOG" > /dev/null ||
		fail_with "$arg"

	$STRACE --signal="$arg" true 2> "$LOG" &&
		fail_with "$arg"
	LC_ALL=C grep -F 'invalid signal' < "$LOG" > /dev/null ||
		fail_with "$arg"
done

exit 0
